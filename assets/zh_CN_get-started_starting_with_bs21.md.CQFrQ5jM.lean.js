import{_ as s,c as i,ac as e,o as t}from"./chunks/framework.CeO_JeQa.js";const b=JSON.parse('{"title":"从 bs21 开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/get-started/starting_with_bs21.md","filePath":"zh_CN/get-started/starting_with_bs21.md","lastUpdated":1744789501000}'),l={name:"zh_CN/get-started/starting_with_bs21.md"};function n(r,a,p,h,d,o){return t(),i("div",null,a[0]||(a[0]=[e('<h1 id="从-bs21-开始" tabindex="-1">从 bs21 开始 <a class="header-anchor" href="#从-bs21-开始" aria-label="Permalink to &quot;从 bs21 开始&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">作者</p><p>kirto</p></div><p>本文主要介绍如何搭建 BS21 的 XFusion 开发环境</p><div class="warning custom-block github-alert"><p class="custom-block-title">开发环境支持情况</p><p>XFusion 下本平台已支持 (测试验证) 的开发环境有：Linux</p></div><h1 id="关于-bs21" tabindex="-1">关于 BS21 <a class="header-anchor" href="#关于-bs21" aria-label="Permalink to &quot;关于 BS21&quot;">​</a></h1><p>bs21 是一款高度集成 2.4GHz SoC BLE&amp;SLE 芯片，集成 BLE5.4/SLE1.0 和 RF 电路，RF 包含功率放大器 PA、低噪声放大器、TX/RX Switch、集成电源管理等 模块，支持 1M/2M/4M 3 种带宽，最大支持 12Mbit/s 速率。</p><p>bs21 集成高性能 32bit 微处理器（MCU），硬件安全引擎以及丰富的外设接 口，外设接口包括 SPI、UART、I2C、PWM、GPIO、USB2.0、NFC Tag、PDM、 I2S/PCM、QDEC、KEYSCAN 键盘扫描电路，支持 8 路 13bit 分辨率 ADC、ADC 支 持对接音频 AMIC，内置 SRAM 和合封 Flash，并支持在 Flash 上运行程序。</p><p>bs21 支持 LiteOS，并配套提供开放、易用的开发和调试运行环境。</p><p>bs21 适应于 PC 配件，IOT 等物联网智能终端领域。</p><p><strong>bs21 的主要特性</strong></p><ul><li>支持 BLE 5.4。</li><li>支持 LE1M、LE2M、Long Range。</li><li>支持内置 PA，集成 TX/RX switch。</li><li>灵敏度 <ul><li>LE1M：-97dBm。</li><li>LE2M：-94dBm。</li><li>LR125K：-103dBm。</li></ul></li><li>发射功率支持 8dBm。</li><li>支持最多连接 8 条链路，8 条链路 BLE 和 SLE 共享。</li><li>支持 BLE 白名单、可解析。</li><li>支持 HID 人机接口设备。</li><li>支持 BLE 业务间隙扫频功能。</li><li>支持 BLE AFH 跳频。</li></ul><h1 id="激活-xfusion" tabindex="-1">激活 XFusion <a class="header-anchor" href="#激活-xfusion" aria-label="Permalink to &quot;激活 XFusion&quot;">​</a></h1><p>通过之前在 .bashrc 中保存的激活命令的别名来激活 (详见<a href="./preparation_with_linux.html#安装-xfusion">安装 XFusion</a>)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bs21</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 <code>xf target -s</code> 命令，可以帮助我们确认导出的 target 是否是 bs21</p><h1 id="安装-bs21-sdk" tabindex="-1">安装 BS21 SDK <a class="header-anchor" href="#安装-bs21-sdk" aria-label="Permalink to &quot;安装 BS21 SDK&quot;">​</a></h1><h2 id="获取源码" tabindex="-1">获取源码 <a class="header-anchor" href="#获取源码" aria-label="Permalink to &quot;获取源码&quot;">​</a></h2><p>激活后，我们仅仅需要一个命令。XFusion 便会自动的根据 <code>boards/nearlink/bs21</code> 下的 <code>target.json</code> 文件，来下载对应版本的sdk。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="安装-bs21-sdk-环境依赖" tabindex="-1">安装 BS21 SDK 环境依赖 <a class="header-anchor" href="#安装-bs21-sdk-环境依赖" aria-label="Permalink to &quot;安装 BS21 SDK 环境依赖&quot;">​</a></h2><p>bs21 的 SDK 是使用 python + cmake 编译，其中依赖一些软件，需要安装</p><h3 id="配置-shell" tabindex="-1">配置 Shell <a class="header-anchor" href="#配置-shell" aria-label="Permalink to &quot;配置 Shell&quot;">​</a></h3><p>配置默认使用 bash。打开Linux终端，执行命令“sudo dpkg-reconfigure dash”， 选择 no。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg-reconfigure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="安装-cmake" tabindex="-1">安装 Cmake <a class="header-anchor" href="#安装-cmake" aria-label="Permalink to &quot;安装 Cmake&quot;">​</a></h3><p>打开 Linux 终端，执行命令“sudo aptinstall cmake”，完成Cmake 的安装。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="安装pycparser" tabindex="-1">安装pycparser <a class="header-anchor" href="#安装pycparser" aria-label="Permalink to &quot;安装pycparser&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pycparser==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.21</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',29)]))}const u=s(l,[["render",n]]);export{b as __pageData,u as default};
