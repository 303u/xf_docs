import{_ as n,c as a,ac as e,o as p}from"./chunks/framework.CeO_JeQa.js";const d=JSON.parse('{"title":"文档指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/contribute/documentation_guide.md","filePath":"zh_CN/contribute/documentation_guide.md","lastUpdated":1744789501000}'),l={name:"zh_CN/contribute/documentation_guide.md"};function i(r,s,t,c,o,u){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="文档指南" tabindex="-1">文档指南 <a class="header-anchor" href="#文档指南" aria-label="Permalink to &quot;文档指南&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">作者</p><p>ccb5, dotc</p></div><p>本文描述编写 XFusion 文档需要遵守的内容、格式等规范。</p><p><strong>前置准备：</strong></p><ol><li>对 markdown 语法有充分的了解，如需参考 markdown 语法，请参考 <a href="#Markdown-入门基础-|-Markdown-官方教程">Markdown 入门基础 | Markdown 官方教程</a>，<a href="#Markdown-教程-|-菜鸟教程-(runoob.com)">Markdown-教程 | 菜鸟教程</a>。</li><li>对 vitepress 部分补充语法，详参: <a href="#VitePress-内置的-Markdown-扩展">VitePress 内置的 Markdown 扩展</a> 。</li></ol><hr><h1 id="文档仓库的获取及前置准备" tabindex="-1">文档仓库的获取及前置准备 <a class="header-anchor" href="#文档仓库的获取及前置准备" aria-label="Permalink to &quot;文档仓库的获取及前置准备&quot;">​</a></h1><h2 id="_1-文档仓库的获取" tabindex="-1">1. 文档仓库的获取 <a class="header-anchor" href="#_1-文档仓库的获取" aria-label="Permalink to &quot;1. 文档仓库的获取&quot;">​</a></h2><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>如需对文档系统部分进行贡献 (需要提 PR )，请勿直接克隆主仓库进行修改，请严格按以下步骤执行。</p></div><ul><li>文档主仓库地址: <a href="https://github.com/x-eks-fusion/xf_docs" target="_blank" rel="noreferrer">https://github.com/x-eks-fusion/xf_docs</a></li></ul><ol><li>fork 主仓库到自己的账户下。</li><li>在本地克隆自己 fork 的仓库。</li><li>根据将修改的内容，创建合适的分支名，最后基于这个分支进行修改。</li></ol><ul><li>详参:<a href="./pull_request_process.html">Pull Request 提交步骤</a></li></ul><h2 id="_2-环境的搭建" tabindex="-1">2. 环境的搭建 <a class="header-anchor" href="#_2-环境的搭建" aria-label="Permalink to &quot;2. 环境的搭建&quot;">​</a></h2><ul><li><p>如需本地预览效果,请确保已经安装 (<code>nodejs &gt;= 18</code>) (<code>pnpm &gt;= 9.2.0</code>) 环境。</p><ul><li>nodejs 安装详见： <a href="https://nodejs.org/zh-cn/download/package-manager" target="_blank" rel="noreferrer">https://nodejs.org/zh-cn/download/package-manager</a></li><li>包管理器安装详见： <a href="https://nodejs.org/zh-cn/download/package-manager/all" target="_blank" rel="noreferrer">https://nodejs.org/zh-cn/download/package-manager/all</a></li></ul></li></ul><h2 id="_3-根据需要执行以下指令" tabindex="-1">3. 根据需要执行以下指令 <a class="header-anchor" href="#_3-根据需要执行以下指令" aria-label="Permalink to &quot;3. 根据需要执行以下指令&quot;">​</a></h2><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (必需)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 热更新预览 (看实际需要，通常使用此命令进行边编写边查看实际渲染效果的操作)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译静态文件 (看实际需要)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 预览编译后的文件 (看实际需要)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="关于文档修改的一些操作" tabindex="-1">关于文档修改的一些操作 <a class="header-anchor" href="#关于文档修改的一些操作" aria-label="Permalink to &quot;关于文档修改的一些操作&quot;">​</a></h1><ul><li><p>文档修改一般有如下操作:</p><ul><li><p>需要在侧边栏新增大纲:</p><ul><li>在文件 &quot;<strong>.vitepress/sidebar.ts</strong>&quot; 下的 &quot;<strong>function sidebarTOC()</strong>&quot; 中增加对应的大纲信息以及大纲条目描述。</li><li>例 :</li></ul><details class="details custom-block"><summary>增加大纲 &quot;深入了解&quot;，其中有两条目: &quot;XFusion 目录结构&quot;, &quot;XFusion 构建流程&quot;</summary><div class="language-VitePress vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">VitePress</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>export function sidebarTOC(): DefaultTheme.SidebarItem[] {</span></span>
<span class="line"><span>   return [</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      ......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      // 大纲项</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>         text: &quot;深入了解&quot;,                // 大纲名</span></span>
<span class="line"><span>         collapsed: false,</span></span>
<span class="line"><span>         link: &quot;/zh_CN/insight/&quot;,         // 大纲文档组所在路径 (index.md)</span></span>
<span class="line"><span>         items: sidebarInsight(),         // 大纲的描述 (描述其下条目的名字、路径)</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      ......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   ];</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 大纲的描述 (描述其下条目的名字、路径)</span></span>
<span class="line"><span>/* 深入了解 */</span></span>
<span class="line"><span>function sidebarInsight(): DefaultTheme.SidebarItem[] {</span></span>
<span class="line"><span>   return [</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>            text: &quot;XFusion 目录结构&quot;,</span></span>
<span class="line"><span>            link: &quot;/zh_CN/insight/xfusion_directory_structure&quot;,</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>            text: &quot;XFusion 构建流程&quot;,</span></span>
<span class="line"><span>            link: &quot;/zh_CN/insight/xfusion_build_process&quot;,</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>   ];</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></details></li><li><p>需要在现有大纲中新增条目:</p><ul><li>在文件 &quot;<strong>.vitepress/sidebar.ts</strong>&quot; 下的 &quot;<strong>function sidebarTOC()</strong>&quot; 中找到对应大纲项的大纲描述，然后在大纲描述中增加对应的条目信息，以及对应文档的路径。</li><li>例 :<details class="details custom-block"><summary>在大纲 &quot;深入了解&quot; 中增加 1 个条目: &quot;xf build 构建脚本&quot;</summary><div class="language-VitePress vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">VitePress</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>export function sidebarTOC(): DefaultTheme.SidebarItem[] {</span></span>
<span class="line"><span>   return [</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      ......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      // 目标大纲项</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>         text: &quot;深入了解&quot;,                // 大纲名</span></span>
<span class="line"><span>         collapsed: false,</span></span>
<span class="line"><span>         link: &quot;/zh_CN/insight/&quot;,         // 大纲文档组所在路径 (index.md)</span></span>
<span class="line"><span>         items: sidebarInsight(),         // 大纲的描述 (描述其下条目的名字、路径)</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      ......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   ];</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>......</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 大纲的描述 (描述其下条目的名字、路径)</span></span>
<span class="line"><span>/* 深入了解 */</span></span>
<span class="line"><span>function sidebarInsight(): DefaultTheme.SidebarItem[] {</span></span>
<span class="line"><span>   return [</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>            text: &quot;XFusion 目录结构&quot;,</span></span>
<span class="line"><span>            link: &quot;/zh_CN/insight/xfusion_directory_structure&quot;,</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>            text: &quot;XFusion 构建流程&quot;,</span></span>
<span class="line"><span>            link: &quot;/zh_CN/insight/xfusion_build_process&quot;,</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>      // 新增的 &quot;xf build 构建脚本&quot; 条目</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>            text: &quot;xf build 构建脚本&quot;,</span></span>
<span class="line"><span>            link: &quot;/zh_CN/insight/xf_build_script&quot;,</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>   ];</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div></details></li></ul></li></ul></li></ul><h1 id="文档内容" tabindex="-1">文档内容 <a class="header-anchor" href="#文档内容" aria-label="Permalink to &quot;文档内容&quot;">​</a></h1><ul><li>目前一般的文档主要有如下内容 : <ol><li>开头标明作者。如下 :<div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">&gt; [</span><span style="--shiki-light:#032F62;--shiki-light-text-decoration:underline;--shiki-dark:#DBEDFF;--shiki-dark-text-decoration:underline;">!NOTE</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">] 作者</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">&gt; &lt;作者名称&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li>概述。请使用正文格式进行描述。</li><li>内容。</li><li>参考文献。</li></ol></li></ul><h1 id="文档格式规范" tabindex="-1">文档格式规范 <a class="header-anchor" href="#文档格式规范" aria-label="Permalink to &quot;文档格式规范&quot;">​</a></h1><p>XFusion 文档目前只提供中文，为了管理不同文档中的图片，<strong>请将文档中使用到的图片统一放到<code>doc/public/image</code>路径下</strong>。</p><p>编写文档时，请遵循以下<strong>文档规则：</strong></p><ol><li><p><strong>一个段落写在同一行内。</strong></p><p><strong>错误</strong>示例如下。这个示例中将一段或者一句话分成了很多行。</p><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我是一段很长的段落。在这个段落中，我将反复强调一个观点，那就是我是一段很长很长的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">段落。这个段落的目的是为了达到一定的字数，通过不断地重复“我是一段很长的段落”来实</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">现。这种写作方式可能单调，但它有效地传达了信息，即我是一段很长的段落。总之，这个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">段落的核心就是它的长度和重复性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">尽管现在的长度已经缩减，但核心思想仍然不变。这种重复的写作手法，虽然可能显得有些</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">单调，却能够清晰地传达出一个信息：我是一段很长的段落。这就是这个段落存在的意义，</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">它通过简洁的语言和重复的结构，向读者展示了其核心内容。总结来说，这个段落的主旨依</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">然是它的冗长和重复，这是其独特的表达方式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>正确</strong>的示例如下。 markdown 在查看时通常会打开自动换行，不需要手动换行。 一段话一行有助于在翻译软件中快速翻译，而不需要手动删除换行。</p><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我是一段很长的段落。在这个段落中，我将反复强调一个观点，那就是我是一段很长很长的段落。这个段落的目的是为了达到一定的字数，通过不断地重复“我是一段很长的段落”来实现。这种写作方式可能单调，但它有效地传达了信息，即我是一段很长的段落。总之，这个段落的核心就是它的长度和重复性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">尽管现在的长度已经缩减，但核心思想仍然不变。这种重复的写作手法，虽然可能显得有些单调，却能够清晰地传达出一个信息：我是一段很长的段落。这就是这个段落存在的意义，它通过简洁的语言和重复的结构，向读者展示了其核心内容。总结来说，这个段落的主旨依然是它的冗长和重复，这是其独特的表达方式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>使用自动格式化</strong>，并注意一些格式细节。</p><p>推荐使用 vscode 插件<code>esbenp.prettier-vscode</code>来完成格式化与 markdown 预览等功能。通过该插件可以使用<code>alt + shift + f</code>快捷键来快速格式化 markdown 文档而不用鼠标右键格式化或者手动格式化。</p><ol><li><p><strong>在中英文、数字间适当插入空格。</strong></p><p>尽管很多渲染器在预览时可以自动插入空格，但还是有很多不支持。插入空格的 markdown 文档在阅读源码时更加美观。 例如：<code>你说的对，但是《STM32》是由意法半导体 (ST) 推出的一系列 32 位的单片机。</code>。</p></li><li><p><strong>使用<code>*</code>而不是<code>_</code>。</strong></p><p>例如需要加粗的部分使用<code>**粗体**</code>、而不是<code>__粗体__</code>。 因为<code>_</code>可能无法被正确识别，而且在输入中文时输入<code>_</code>需要频繁切换中英文输入。</p></li><li><p>代码块中<strong>标注正确的语言种类</strong>，以提供语法高亮。</p></li><li><p>建议在说明复杂的逻辑时使用<code>mermaid</code>、<code>wavedrom</code>绘制图表、时序图辅助说明。</p></li><li><p>不建议在 markdown 文档内使用注释，如<code>&lt;!-- --&gt;</code>。</p></li></ol></li><li><p>文件格式：</p><ol><li>使用 3 或者 4 个空格替代<code>TAB</code>，并且<strong>不要</strong>使用制表符缩进代码；</li><li>行尾<strong>不要</strong>尾随空格；</li><li>文件编码格式为 <strong>UTF-8</strong> 格式；</li><li>使用 Unix 风格的 <strong>LF</strong> 行结束符。</li><li>markdown 源码也需要保证一定的美观。 TODO: markdown 源码格式具体规定。</li></ol></li></ol><h1 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h1><ol><li><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/contribute/documenting-code.html" target="_blank" rel="noreferrer">编写文档 - ESP32 - — ESP-IDF 编程指南 latest 文档 (espressif.com)</a></li><li id="Markdown-教程-|-菜鸟教程-(runoob.com)"><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noreferrer">Markdown 教程 | 菜鸟教程 (runoob.com)</a></li><li id="Markdown-入门基础-|-Markdown-官方教程"><a href="https://markdown.com.cn/intro.html" target="_blank" rel="noreferrer">Markdown 入门基础 | Markdown 官方教程</a></li><li id="VitePress-内置的-Markdown-扩展"><a href="https://vitepress.dev/zh/guide/markdown" target="_blank" rel="noreferrer">VitePress 内置的 Markdown 扩展</a></li></ol>`,26)]))}const h=n(l,[["render",i]]);export{d as __pageData,h as default};
