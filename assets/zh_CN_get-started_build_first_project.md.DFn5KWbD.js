import{_ as i,c as a,ac as n,o as e}from"./chunks/framework.CeO_JeQa.js";const c=JSON.parse('{"title":"编译第一个工程","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/get-started/build_first_project.md","filePath":"zh_CN/get-started/build_first_project.md","lastUpdated":1744789501000}'),l={name:"zh_CN/get-started/build_first_project.md"};function t(p,s,h,r,d,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="编译第一个工程" tabindex="-1">编译第一个工程 <a class="header-anchor" href="#编译第一个工程" aria-label="Permalink to &quot;编译第一个工程&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">作者</p><p>kirto</p></div><p>文本档主要帮助用户创建第一个工程，以及如何指导用户进行编程，编译，烧录</p><h1 id="创建第一个-xfusion-工程" tabindex="-1">创建第一个 XFusion 工程 <a class="header-anchor" href="#创建第一个-xfusion-工程" aria-label="Permalink to &quot;创建第一个 XFusion 工程&quot;">​</a></h1><ol><li><p>激活自己的 SDK 环境</p><div class="tip custom-block github-alert"><p class="custom-block-title">激活环境</p><p>有些 SDK ，例如：esp32 每次打开终端需要使用 export 激活一次环境</p></div></li><li><p>激活 XFusion</p><div class="warning custom-block github-alert"><p class="custom-block-title">⚠️ 注意</p><p>get_xf 的命令是执行 export.sh 的别名。具体参考：</p><p><a href="./preparation_with_linux.html">linux 环境搭建</a></p><p><a href="./preparation_with_windows.html">windows 环境搭建</a></p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_xf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">targe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>使用命令创建一个新的 XFusion 工程</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时创建出来的文件夹结构如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">📦hello</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ┣</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 📂main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ┃</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ┣</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 📜xf_collect.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ┃</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ┗</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 📜xf_main.c</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ┗</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 📜xf_project.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>xf_project.py</strong>: 工程构建脚本，xf 命令通过识别这个文件来确认是不是 XFusion 。文件内部调用 xf_build 初始化工程。</li><li><strong>xf_collect.py</strong>：工程收集脚本，xf 通过该脚本收集所有编译的信息。文件内部调用 xf_build 的 collec() 方法收集编译信息。默认收集同级文件夹的所有 .c 。以及将当前所在文件夹加入 include_path 。</li><li><strong>xf_main.c</strong>：代码入口文件。主要识别 xf_main() 函数作为 xf_build 的代码入口。</li></ul></li></ol><h1 id="修改第一个-xfusion-工程" tabindex="-1">修改第一个 XFusion 工程 <a class="header-anchor" href="#修改第一个-xfusion-工程" aria-label="Permalink to &quot;修改第一个 XFusion 工程&quot;">​</a></h1><ol><li><p>添加自己的打印</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xf_log.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xf_main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xf_log_printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello XFusion</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ol><h1 id="编译第一个-xfusion-工程" tabindex="-1">编译第一个 XFusion 工程 <a class="header-anchor" href="#编译第一个-xfusion-工程" aria-label="Permalink to &quot;编译第一个 XFusion 工程&quot;">​</a></h1><ol><li><p>编译工程</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>烧录代码 (非必要，看对应平台是否有支持，如不支持，需按原平台的方式进行)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>查看串口打印 (非必要，看对应平台是否有支持，如不支持，需按原平台的方式进行)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">por</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>按下<kbd>ctrl</kbd>+<kbd>]</kbd>退出串口</p></li></ol><h1 id="导出第一个-xfusion-工程" tabindex="-1">导出第一个 XFusion 工程 <a class="header-anchor" href="#导出第一个-xfusion-工程" aria-label="Permalink to &quot;导出第一个 XFusion 工程&quot;">​</a></h1><div class="warning custom-block github-alert"><p class="custom-block-title">⚠️ 注意</p><p>有些芯片不是命令行编译，需要通过 IDE。比如：keil。 这时上述编译步骤就没用了</p></div><ol><li><p>导出 IDE 工程</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">工程</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过上述命令，可以导出生成一个完整的 IDE 工程。然后打开工程，即可在 IDE 的环境中开发</p></li><li><p>更新 IDE 工程</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">工程</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当已有导出工程后，希望能更新工程的时候，可以使用上述指令进行工程更新。</p></li></ol>`,12)]))}const u=i(l,[["render",t]]);export{c as __pageData,u as default};
